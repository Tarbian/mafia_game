import 'dart:io';

import 'package:Tests/presentation/game_presenter.dart';

import 'game_initialiser.dart';

class GameMenu {
  late GamePresenter presenter;
  final GameInitialiser gameInitialiser = GameInitialiser();

  bool isRunning = true;
  GameMenu() {
    this.presenter = gameInitialiser.getGamePresenter();
  }

  Future<void> start() async {
    print('\nüéÆ –í—ñ—Ç–∞—î–º–æ —É Mafia Empire!');
    print('üåÜ –¢–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è ‚Äî –∑–∞—Ö–æ–ø–∏—Ç–∏ –º—ñ—Å—Ç–æ –π –æ–±—ñ–π—Ç–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ñ–≤.\n');

    while (isRunning) {
      _printMenu();
      String? input = stdin.readLineSync();

      switch (input) {
        case '1':
          _handleRacket();
          break;
        case '2':
          _handleCaptureObject();
          break;
        case '3':
          await _handleCheckTeam();
          break;
        case '4':
          _handleHealFighter();
          break;
        case '5':
          _handleHireMember();
          break;
        case '6':
          _handleViewMap();
          break;
        case '7':
          _handleNextDay();
          break;
        case '0':
          _exitGame();
          break;
        default:
          print('‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.\n');
      }
    }
  }

  void _printMenu() {
    print('''
===========================
üïπ –î—ñ—ó (–æ–±–µ—Ä–∏ —Ü–∏—Ñ—Ä—É):

[1] –ü—Ä–æ–≤–µ—Å—Ç–∏ —Ä–µ–∫–µ—Ç
[2] –ó–∞—Ö–æ–ø–∏—Ç–∏ –æ–±'—î–∫—Ç
[3] –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∫–æ–º–∞–Ω–¥—É
[4] –í–∏–ª—ñ–∫—É–≤–∞—Ç–∏ –±—ñ–π—Ü—è
[5] –ù–∞–π–Ω—è—Ç–∏ –º–∞—Ñ—ñ–æ–∑–Ω—ñ–∫–∞
[6] –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –º–∞–ø—É –º—ñ—Å—Ç–∞
[7] –ù–∞—Å—Ç—É–ø–Ω–∏–π –¥–µ–Ω—å >>
[0] –í–∏–π—Ç–∏ –∑ –≥—Ä–∏
===========================
''');
    stdout.write('> –í–∏–±—ñ—Ä: ');
  }

  void _handleRacket() {
    print('\nüî´ [–†–µ–∫–µ—Ç] ‚Äî —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —É —Ä–æ–∑—Ä–æ–±—Ü—ñ...\n');
  }

  void _handleCaptureObject() {
    print('\nüèö [–ó–∞—Ö–æ–ø–ª–µ–Ω–Ω—è –æ–±\'—î–∫—Ç–∞] ‚Äî —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —É —Ä–æ–∑—Ä–æ–±—Ü—ñ...\n');
  }

  Future _handleCheckTeam() async {
    print('\nüë• [–ö–æ–º–∞–Ω–¥–∞]:');
    await presenter.showNews();
    print('');
  }

  void _handleHealFighter() {
    print('\nüíâ [–õ—ñ–∫—É–≤–∞–Ω–Ω—è –±—ñ–π—Ü—è] ‚Äî —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —É —Ä–æ–∑—Ä–æ–±—Ü—ñ...\n');
  }

  void _handleHireMember() {
    print('\nü§ù [–ù–∞–π–º –º–∞—Ñ—ñ–æ–∑–Ω—ñ–∫–∞] ‚Äî —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —É —Ä–æ–∑—Ä–æ–±—Ü—ñ...\n');
  }

  void _handleViewMap() {
    print('\nüó∫ [–ú–∞–ø–∞ –º—ñ—Å—Ç–∞] ‚Äî —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —É —Ä–æ–∑—Ä–æ–±—Ü—ñ...\n');
  }

  void _handleNextDay() {
    print('\nüìÜ [–ù–∞—Å—Ç—É–ø–Ω–∏–π –¥–µ–Ω—å] ‚Äî —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —É —Ä–æ–∑—Ä–æ–±—Ü—ñ...\n');
  }

  void _exitGame() {
    stdout.write('\n‚ùì –í–∏ –¥—ñ–π—Å–Ω–æ —Ö–æ—á–µ—Ç–µ –≤–∏–π—Ç–∏ –∑ –≥—Ä–∏? (y/n): ');
    String? confirmation = stdin.readLineSync();

    if (confirmation != null && confirmation.toLowerCase() == 'y') {
      print('\nüíÄ –ì—Ä—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –î–æ –∑—É—Å—Ç—Ä—ñ—á—ñ —É –ø—ñ–¥–ø—ñ–ª–ª—ñ!');
      exit(0);
    } else {
      print('\nüëç –î–æ–±—Ä–µ, –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ –≥—Ä—É!');
    }
  }
}
